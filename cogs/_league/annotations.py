from typing import Any, Literal, TypedDict

match_info_participant_stat_keys = Literal[
    "assists",
    "damageDealtToBuildings",
    "damageDealtToObjectives",
    "damageDealtToTurrets",
    "damageSelfMitigated",
    "deaths",
    "detectorWardsPlaced",
    "doubleKills",
    "dragonKills",
    "goldEarned",
    "goldSpent",
    "inhibitorKills",
    "inhibitorTakedowns",
    "kills",
    "magicDamageDealt",
    "magicDamageDealtToChampions",
    "magicDamageTaken",
    "neutralMinionsKilled",
    "pentaKills",
    "physicalDamageDealt",
    "physicalDamageDealtToChampions",
    "physicalDamageTaken",
    "quadraKills",
    "sightWardsBoughtInGame",
    "timeCCingOthers",
    "totalAllyJungleMinionsKilled",
    "totalDamageDealt",
    "totalDamageDealtToChampions",
    "totalDamageShieldedOnTeammates",
    "totalDamageTaken",
    "totalEnemyJungleMinionsKilled",
    "totalHeal",
    "totalHealsOnTeammates",
    "totalMinionsKilled",
    "totalTimeCCDealt",
    "totalTimeSpentDead",
    "totalUnitsHealed",
    "tripleKills",
    "trueDamageDealt",
    "trueDamageDealtToChampions",
    "trueDamageTaken",
    "turretKills",
    "turretTakedowns",
    "turretsLost",
    "unrealKills",
    "visionClearedPings",
    "visionScore",
    "visionWardsBoughtInGame",
    "wardsKilled",
    "wardsPlaced",
    "win",
]

GameMode = TypedDict(
    "GameMode",
    {
        "queueId": int,
        "map": str,
        "description": str | None,
        "notes": str | None,
    },
)

Augment = TypedDict(
    "Augment",
    {
        "apiName": str,
        "calculations": Any,
        "dataValues": Any,
        "desc": str,
        "iconLarge": str,
        "iconSmall": str,
        "id": int,
        "name": str,
        "rarity": int,
        "tooltip": str,
    },
)
